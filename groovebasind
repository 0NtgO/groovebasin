#!/usr/bin/env coffee

http = require 'http'
net = require 'net'
socketio = require 'socket.io'
static = require 'node-static'
nconf = require 'nconf'

nconf
  .argv()
  .env()
# these files in the wrong order because of
# https://github.com/flatiron/nconf/issues/28
  .file({file: "/etc/groovebasinrc"})
  .file({file: "#{process.env.HOME}/.groovebasinrc"})
  .defaults
    log_level: 3
    http:
      port: 80
    mpd:
      host: 'localhost'
      port: 6600
      conf: "/etc/mpd.conf"

# static server
fileServer = new (static.Server) './public'
app = http.createServer((request, response) ->
  request.addListener 'end', ->
    fileServer.serve request, response
).listen(nconf.get('http:port'))
console.log "Attempting to serve http://localhost:#{nconf.get('http:port')}/"

# check for mpd
connect_mpd = (connected_callback=->) ->
  # have to pass in the 'connection' event handler.
  # once we call connect(), it's too late to attach a handler for 'connection'.
  mpd_socket = net.connect nconf.get('mpd:port'), nconf.get('mpd:host'), ->
    console.log 'mpd connected'
    connected_callback()
  mpd_socket.on 'end', -> console.log 'mpd disconnected'
  mpd_socket
(->
  console.log "Checking for mpd daemon"
  mpd = connect_mpd ->
    console.log "Found mpd daemon. Closing test socket."
    mpd.end()
  mpd.on 'error', ->
    console.log "ERROR: No mpd daemon found."
)()

io = socketio.listen(app)
io.set 'log level', nconf.get('log_level')
io.sockets.on 'connection', (socket) ->
  mpd = connect_mpd()
  mpd.on 'data', (data) ->
    socket.emit 'FromMpd', data.toString()
  mpd.on 'end', ->
    try socket.emit 'disconnect'

  socket.on 'ToMpd', (data) ->
    console.log "[in] " + data
    try mpd.write data

  socket.on 'disconnect', -> mpd.end()
