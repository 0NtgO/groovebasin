POLL_INTERVAL = 100
ESCALATE_TIMEOUT = 3000
ERROR_TIMEOUT = 2000

module.exports = class Killer extends require('events').EventEmitter
  (@pid) ~>

  kill: !->
    @interval = setInterval(@~check, POLL_INTERVAL)
    @sig_kill_timeout = setTimeout(@~escalate, ESCALATE_TIMEOUT)
    @sig = "SIGTERM"

  check: !->
    try
      process.kill(@pid, @sig)
    catch e
      @clean()
      if e.code is \ESRCH
        @emit 'end'
      else
        @emit 'error', e

  clean: !->
    clearInterval(@interval) if @interval?
    @interval = null

    clearTimeout(@sig_kill_timeout) if @sig_kill_timeout?
    @sig_kill_timeout = null

    clearTimeout(@error_timeout) if @error_timeout?
    @error_timeout = null

  escalate: !->
    @sig = "SIGKILL"
    @error_timeout = setTimeout(@~giveUp, ERROR_TIMEOUT)

  giveUp: !->
    @clean()
    @emit 'error', new Error("Unable to kill #{@pid}: timeout")
