path    = require 'path'
mutagen = require 'mutagen'
walk    = require 'walk'
{EventEmitter} = require 'events'

module.exports = class Library extends EventEmitter
  (@bus) ~>
    @bus.on 'save_state', @~onSaveState

  onSaveState: !(state) ->
    @music_lib_path = state.mpd_conf.music_directory
    @startScan!

  ..trackNameFromFile = (file) ->
    filetitle = file.substr(file.lastIndexOf('/') + 1)
    len = if (dot = filetitle.lastIndexOf('.')) >= 0 then dot else filetitle.length
    filetitle.substr 0, len

  ..parseMaybeUndefNumber = (n) ->
    n = parseInt(n, 10)
    n = null if isNaN(n)
    n

  get_library: !(cb) ->
    if @scan_complete
      cb @library
    else
      @once \library, cb
  startScan: !->
    return if @library?
    @library = {}
    console.log 'starting library scan'
    start_time = new Date!.getTime!
    files = []
    walker = walk.walk @music_lib_path, followLinks: false
    walker.on \file, !(root, fileStats, next) ~>
      files.push path.join root, fileStats.name
      next!
    walker.on \end, !~>
      mutagen.read files, !(err, tagses) ~>
        if err
          console.log err.stderr
          return
        for file, i of files
          tags = tagses[i]
          # make sure there are any tags
          good = false
          for key in tags
            good = true
            break
          continue unless good
          local_file = file.substr @music_lib_path.length+1
          @library[local_file] =
            file: local_file
            name: tags.title?.0?.trim! or ..trackNameFromFile file
            artist_name: tags.artist?.0?.trim! or ""
            artist_disambiguation: ""
            album_artist_name: tags.artist?.0?.trim! or "" # TODO
            album_name: tags.album?.0?.trim! or ""
            track: ..parseMaybeUndefNumber(tags.tracknumber?.0)
            time: parseInt(tags['info/length'], 10)
            year: ..parseMaybeUndefNumber(tags.date?.0)
        console.log "library scan complete. #{Math.round new Date!.getTime! - start_time}ms."
        @scan_complete = true
        @emit \library, @library
